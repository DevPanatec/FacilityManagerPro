-- Tabla de empresas
CREATE TABLE empresas (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre VARCHAR NOT NULL,
  logo_url VARCHAR,
  estado VARCHAR DEFAULT 'Activo',
  ultima_actualizacion TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('UTC'::text, NOW()),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('UTC'::text, NOW())
);

-- Tabla de resumen de empresa
CREATE TABLE empresa_resumen (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  empresa_id BIGINT REFERENCES empresas(id) ON DELETE CASCADE,
  personal INTEGER,
  areas INTEGER,
  actividad INTEGER,
  UNIQUE(empresa_id)
);

-- Tabla de estadísticas
CREATE TABLE empresa_estadisticas (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  empresa_id BIGINT REFERENCES empresas(id) ON DELETE CASCADE,
  tipo VARCHAR NOT NULL,
  valor VARCHAR NOT NULL,
  UNIQUE(empresa_id, tipo)
);

-- Tabla de servicios principales
CREATE TABLE servicios_principales (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  empresa_id BIGINT REFERENCES empresas(id) ON DELETE CASCADE,
  servicio VARCHAR NOT NULL
);

-- Políticas de seguridad
ALTER TABLE empresas ENABLE ROW LEVEL SECURITY;
ALTER TABLE empresa_resumen ENABLE ROW LEVEL SECURITY;
ALTER TABLE empresa_estadisticas ENABLE ROW LEVEL SECURITY;
ALTER TABLE servicios_principales ENABLE ROW LEVEL SECURITY;

-- Políticas de lectura pública
CREATE POLICY "Permitir lectura pública de empresas" ON empresas
  FOR SELECT USING (true);

CREATE POLICY "Permitir lectura pública de resumen" ON empresa_resumen
  FOR SELECT USING (true);

CREATE POLICY "Permitir lectura pública de estadísticas" ON empresa_estadisticas
  FOR SELECT USING (true);

CREATE POLICY "Permitir lectura pública de servicios" ON servicios_principales
  FOR SELECT USING (true);

-- Índices para optimización
CREATE INDEX idx_empresas_nombre ON empresas(nombre);
CREATE INDEX idx_empresas_estado ON empresas(estado);
CREATE INDEX idx_estadisticas_tipo ON empresa_estadisticas(tipo);

-- Crear tabla de perfiles
CREATE TABLE IF NOT EXISTS public.profiles (
  id UUID PRIMARY KEY REFERENCES auth.users(id),
  user_id UUID REFERENCES auth.users(id),
  email TEXT NOT NULL,
  first_name TEXT,
  last_name TEXT,
  avatar_url TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Crear políticas de seguridad para la tabla profiles
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usuarios pueden ver sus propios perfiles"
  ON public.profiles FOR SELECT
  USING (auth.uid() = id);

CREATE POLICY "Usuarios pueden actualizar sus propios perfiles"
  ON public.profiles FOR UPDATE
  USING (auth.uid() = id);

CREATE POLICY "Los administradores pueden ver todos los perfiles"
  ON public.profiles FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public.users 
      WHERE users.id = auth.uid() 
      AND users.role = 'admin'
    )
  );

-- Crear índices para optimización
CREATE INDEX IF NOT EXISTS profiles_user_id_idx ON public.profiles(user_id);
CREATE INDEX IF NOT EXISTS profiles_email_idx ON public.profiles(email); 